{
  "openapi": "3.1.0",
  "info": {
    "title": "TAMS API",
    "description": "Time-addressable Media Store API",
    "version": "6.0"
  },
  "paths": {
    "/flows": {
      "head": {
        "summary": "Head Flows",
        "description": "Return flows path headers",
        "operationId": "head_flows_flows_head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Flows",
        "description": "List flows with optional filtering",
        "operationId": "list_flows_flows_get",
        "parameters": [
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by source ID",
              "title": "Source Id"
            },
            "description": "Filter by source ID"
          },
          {
            "name": "timerange",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by time range",
              "title": "Timerange"
            },
            "description": "Filter by time range"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by format",
              "title": "Format"
            },
            "description": "Filter by format"
          },
          {
            "name": "codec",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by codec",
              "title": "Codec"
            },
            "description": "Filter by codec"
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by label",
              "title": "Label"
            },
            "description": "Filter by label"
          },
          {
            "name": "frame_width",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by frame width",
              "title": "Frame Width"
            },
            "description": "Filter by frame width"
          },
          {
            "name": "frame_height",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by frame height",
              "title": "Frame Height"
            },
            "description": "Filter by frame height"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination key",
              "title": "Page"
            },
            "description": "Pagination key"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 1000,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of results to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create New Flow",
        "description": "Create a new flow",
        "operationId": "create_new_flow_flows_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/VideoFlow-Input"
                  },
                  {
                    "$ref": "#/components/schemas/AudioFlow-Input"
                  },
                  {
                    "$ref": "#/components/schemas/DataFlow-Input"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFlow-Input"
                  },
                  {
                    "$ref": "#/components/schemas/MultiFlow-Input"
                  }
                ],
                "title": "Flow"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/VideoFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/AudioFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/DataFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/ImageFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/MultiFlow-Output"
                    }
                  ],
                  "title": "Response Create New Flow Flows Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}": {
      "head": {
        "summary": "Head Flow",
        "description": "Return flow path headers",
        "operationId": "head_flow_flows__flow_id__head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow By Id",
        "description": "Get a specific flow by ID",
        "operationId": "get_flow_by_id_flows__flow_id__get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "include_timerange",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include timerange in response",
              "default": false,
              "title": "Include Timerange"
            },
            "description": "Include timerange in response"
          },
          {
            "name": "timerange",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by time range",
              "title": "Timerange"
            },
            "description": "Filter by time range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/VideoFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/AudioFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/DataFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/ImageFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/MultiFlow-Output"
                    }
                  ],
                  "title": "Response Get Flow By Id Flows  Flow Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Flow By Id",
        "description": "Update a flow",
        "operationId": "update_flow_by_id_flows__flow_id__put",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/VideoFlow-Input"
                  },
                  {
                    "$ref": "#/components/schemas/AudioFlow-Input"
                  },
                  {
                    "$ref": "#/components/schemas/DataFlow-Input"
                  },
                  {
                    "$ref": "#/components/schemas/ImageFlow-Input"
                  },
                  {
                    "$ref": "#/components/schemas/MultiFlow-Input"
                  }
                ],
                "title": "Flow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/VideoFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/AudioFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/DataFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/ImageFlow-Output"
                    },
                    {
                      "$ref": "#/components/schemas/MultiFlow-Output"
                    }
                  ],
                  "title": "Response Update Flow By Id Flows  Flow Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Flow By Id",
        "description": "Delete a flow",
        "operationId": "delete_flow_by_id_flows__flow_id__delete",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "soft_delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Use soft delete",
              "default": true,
              "title": "Soft Delete"
            },
            "description": "Use soft delete"
          },
          {
            "name": "cascade",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Cascade delete related segments",
              "default": true,
              "title": "Cascade"
            },
            "description": "Cascade delete related segments"
          },
          {
            "name": "deleted_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "User performing the deletion",
              "default": "system",
              "title": "Deleted By"
            },
            "description": "User performing the deletion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/tags": {
      "head": {
        "summary": "Head Flow Tags",
        "description": "Return flow tags path headers",
        "operationId": "head_flow_tags_flows__flow_id__tags_head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow Tags",
        "description": "Get flow tags",
        "operationId": "get_flow_tags_flows__flow_id__tags_get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/tags/{name}": {
      "head": {
        "summary": "Head Flow Tag",
        "description": "Return flow tag path headers",
        "operationId": "head_flow_tag_flows__flow_id__tags__name__head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow Tag",
        "description": "Get specific flow tag value",
        "operationId": "get_flow_tag_flows__flow_id__tags__name__get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Flow Tag",
        "description": "Create or update flow tag",
        "operationId": "update_flow_tag_flows__flow_id__tags__name__put",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "Tag value",
                "title": "Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Flow Tag",
        "description": "Delete specific flow tag",
        "operationId": "delete_flow_tag_flows__flow_id__tags__name__delete",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/description": {
      "head": {
        "summary": "Head Flow Description",
        "description": "Return flow description path headers",
        "operationId": "head_flow_description_flows__flow_id__description_head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow Description",
        "description": "Get flow description",
        "operationId": "get_flow_description_flows__flow_id__description_get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Flow Description",
        "description": "Update flow description",
        "operationId": "update_flow_description_flows__flow_id__description_put",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Description"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Flow Description",
        "description": "Delete flow description",
        "operationId": "delete_flow_description_flows__flow_id__description_delete",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/label": {
      "head": {
        "summary": "Head Flow Label",
        "description": "Return flow label path headers",
        "operationId": "head_flow_label_flows__flow_id__label_head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow Label",
        "description": "Get flow label",
        "operationId": "get_flow_label_flows__flow_id__label_get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Flow Label",
        "description": "Update flow label",
        "operationId": "update_flow_label_flows__flow_id__label_put",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "label",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Label"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Flow Label",
        "description": "Delete flow label",
        "operationId": "delete_flow_label_flows__flow_id__label_delete",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/read_only": {
      "head": {
        "summary": "Head Flow Read Only",
        "description": "Return flow read-only path headers",
        "operationId": "head_flow_read_only_flows__flow_id__read_only_head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow Read Only",
        "description": "Get flow read-only status",
        "operationId": "get_flow_read_only_flows__flow_id__read_only_get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Flow Read Only",
        "description": "Update flow read-only status",
        "operationId": "update_flow_read_only_flows__flow_id__read_only_put",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "read_only",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Read Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/flow_collection": {
      "head": {
        "summary": "Head Flow Collection",
        "description": "Return flow collection path headers",
        "operationId": "head_flow_collection_flows__flow_id__flow_collection_head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow Collection",
        "description": "Get flow collection",
        "operationId": "get_flow_collection_flows__flow_id__flow_collection_get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Flow Collection",
        "description": "Update flow collection",
        "operationId": "update_flow_collection_flows__flow_id__flow_collection_put",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Flow Collection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/max_bit_rate": {
      "head": {
        "summary": "Head Flow Max Bit Rate",
        "description": "Return flow max bit rate path headers",
        "operationId": "head_flow_max_bit_rate_flows__flow_id__max_bit_rate_head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow Max Bit Rate",
        "description": "Get flow max bit rate",
        "operationId": "get_flow_max_bit_rate_flows__flow_id__max_bit_rate_get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Flow Max Bit Rate",
        "description": "Update flow max bit rate",
        "operationId": "update_flow_max_bit_rate_flows__flow_id__max_bit_rate_put",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "max_bit_rate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Max Bit Rate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/avg_bit_rate": {
      "head": {
        "summary": "Head Flow Avg Bit Rate",
        "description": "Return flow average bit rate path headers",
        "operationId": "head_flow_avg_bit_rate_flows__flow_id__avg_bit_rate_head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Flow Avg Bit Rate",
        "description": "Get flow average bit rate",
        "operationId": "get_flow_avg_bit_rate_flows__flow_id__avg_bit_rate_get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Flow Avg Bit Rate",
        "description": "Update flow average bit rate",
        "operationId": "update_flow_avg_bit_rate_flows__flow_id__avg_bit_rate_put",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "avg_bit_rate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Avg Bit Rate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/segments": {
      "head": {
        "summary": "Head Flow Segments",
        "description": "Return flow segments path headers",
        "operationId": "head_flow_segments_flows__flow_id__segments_head",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Flow Segments",
        "description": "List segments for a specific flow",
        "operationId": "list_flow_segments_flows__flow_id__segments_get",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "timerange",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by time range",
              "title": "Timerange"
            },
            "description": "Filter by time range"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlowSegment"
                  },
                  "title": "Response List Flow Segments Flows  Flow Id  Segments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create New Flow Segment",
        "description": "Create a new segment for a flow (supports both JSON and multipart form data)",
        "operationId": "create_new_flow_segment_flows__flow_id__segments_post",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_new_flow_segment_flows__flow_id__segments_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowSegment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Flow Segments By Id",
        "description": "Delete segments for a flow",
        "operationId": "delete_flow_segments_by_id_flows__flow_id__segments_delete",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          },
          {
            "name": "timerange",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Time range to delete",
              "title": "Timerange"
            },
            "description": "Time range to delete"
          },
          {
            "name": "soft_delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Use soft delete",
              "default": true,
              "title": "Soft Delete"
            },
            "description": "Use soft delete"
          },
          {
            "name": "deleted_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "User performing the deletion",
              "default": "system",
              "title": "Deleted By"
            },
            "description": "User performing the deletion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/flows/{flow_id}/storage": {
      "post": {
        "summary": "Create Flow Storage By Id",
        "description": "Create storage allocation for a flow",
        "operationId": "create_flow_storage_by_id_flows__flow_id__storage_post",
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Flow Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowStoragePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowStorage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources": {
      "head": {
        "summary": "Head Sources",
        "description": "Return sources path headers",
        "operationId": "head_sources_sources_head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Sources",
        "description": "List sources with optional filtering",
        "operationId": "list_sources_sources_get",
        "parameters": [
          {
            "name": "label",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by label",
              "title": "Label"
            },
            "description": "Filter by label"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by format",
              "title": "Format"
            },
            "description": "Filter by format"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination key",
              "title": "Page"
            },
            "description": "Pagination key"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 1000,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of results to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of results to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create New Source",
        "description": "Create a new source",
        "operationId": "create_new_source_sources_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Source-Input"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source_id}": {
      "head": {
        "summary": "Head Source",
        "description": "Return source path headers",
        "operationId": "head_source_sources__source_id__head",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Source By Id",
        "description": "Get a specific source by ID",
        "operationId": "get_source_by_id_sources__source_id__get",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Source By Id",
        "description": "Delete a source",
        "operationId": "delete_source_by_id_sources__source_id__delete",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "soft_delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Use soft delete",
              "default": true,
              "title": "Soft Delete"
            },
            "description": "Use soft delete"
          },
          {
            "name": "cascade",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Cascade delete related flows",
              "default": true,
              "title": "Cascade"
            },
            "description": "Cascade delete related flows"
          },
          {
            "name": "deleted_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "User performing the deletion",
              "default": "system",
              "title": "Deleted By"
            },
            "description": "User performing the deletion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source_id}/tags": {
      "head": {
        "summary": "Head Source Tags",
        "description": "Return source tags path headers",
        "operationId": "head_source_tags_sources__source_id__tags_head",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Source Tags",
        "description": "Get source tags",
        "operationId": "get_source_tags_sources__source_id__tags_get",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source_id}/tags/{name}": {
      "head": {
        "summary": "Head Source Tag",
        "description": "Return source tag path headers",
        "operationId": "head_source_tag_sources__source_id__tags__name__head",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Source Tag",
        "description": "Get specific source tag value",
        "operationId": "get_source_tag_sources__source_id__tags__name__get",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Source Tag",
        "description": "Create or update source tag",
        "operationId": "update_source_tag_sources__source_id__tags__name__put",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "Tag value",
                "title": "Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Source Tag",
        "description": "Delete specific source tag",
        "operationId": "delete_source_tag_sources__source_id__tags__name__delete",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source_id}/description": {
      "head": {
        "summary": "Head Source Description",
        "description": "Return source description path headers",
        "operationId": "head_source_description_sources__source_id__description_head",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Source Description",
        "description": "Get source description",
        "operationId": "get_source_description_sources__source_id__description_get",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Source Description",
        "description": "Update source description",
        "operationId": "update_source_description_sources__source_id__description_put",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Description"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Source Description",
        "description": "Delete source description",
        "operationId": "delete_source_description_sources__source_id__description_delete",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source_id}/label": {
      "head": {
        "summary": "Head Source Label",
        "description": "Return source label path headers",
        "operationId": "head_source_label_sources__source_id__label_head",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Source Label",
        "description": "Get source label",
        "operationId": "get_source_label_sources__source_id__label_get",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Source Label",
        "description": "Update source label",
        "operationId": "update_source_label_sources__source_id__label_put",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          },
          {
            "name": "label",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Label"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Source Label",
        "description": "Delete source label",
        "operationId": "delete_source_label_sources__source_id__label_delete",
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/objects/{object_id}": {
      "head": {
        "summary": "Head Object",
        "description": "Return object path headers",
        "operationId": "head_object_objects__object_id__head",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Object By Id",
        "description": "Get a specific object by ID",
        "operationId": "get_object_by_id_objects__object_id__get",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Object By Id",
        "description": "Delete an object",
        "operationId": "delete_object_by_id_objects__object_id__delete",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Id"
            }
          },
          {
            "name": "soft_delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Use soft delete",
              "default": true,
              "title": "Soft Delete"
            },
            "description": "Use soft delete"
          },
          {
            "name": "deleted_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "User performing the deletion",
              "default": "system",
              "title": "Deleted By"
            },
            "description": "User performing the deletion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/objects": {
      "post": {
        "summary": "Create New Object",
        "description": "Create a new object",
        "operationId": "create_new_object_objects_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object-Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/flow-usage": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Flow Usage Analytics",
        "description": "Get flow usage analytics",
        "operationId": "get_flow_usage_analytics_analytics_flow_usage_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/analytics/storage-usage": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Storage Usage Analytics",
        "description": "Get storage usage analytics",
        "operationId": "get_storage_usage_analytics_analytics_storage_usage_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/analytics/time-range-analysis": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Time Range Analytics",
        "description": "Get time range analytics",
        "operationId": "get_time_range_analytics_analytics_time_range_analysis_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/openapi.json": {
      "get": {
        "summary": "Get Openapi Json",
        "description": "Get OpenAPI specification as JSON",
        "operationId": "get_openapi_json_openapi_json_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Get Root",
        "description": "List of paths available from this API",
        "operationId": "get_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Root  Get"
                }
              }
            }
          }
        }
      },
      "head": {
        "summary": "Head Root",
        "description": "Return root path headers",
        "operationId": "head_root__head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/service": {
      "get": {
        "summary": "Get Service",
        "description": "Get service information",
        "operationId": "get_service_service_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update Service",
        "description": "Update service information",
        "operationId": "update_service_service_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "head": {
        "summary": "Head Service",
        "description": "Return service path headers",
        "operationId": "head_service_service_head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/service/webhooks": {
      "get": {
        "summary": "List Webhooks",
        "description": "List webhooks",
        "operationId": "list_webhooks_service_webhooks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhooksResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Webhook",
        "description": "Create a new webhook",
        "operationId": "create_webhook_service_webhooks_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "head": {
        "summary": "Head Webhooks",
        "description": "Return webhooks path headers",
        "operationId": "head_webhooks_service_webhooks_head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/flow-delete-requests": {
      "get": {
        "summary": "List Deletion Requests",
        "description": "List deletion requests",
        "operationId": "list_deletion_requests_flow_delete_requests_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletionRequestsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Deletion Request",
        "description": "Create a new deletion request",
        "operationId": "create_deletion_request_flow_delete_requests_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeletionRequest-Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletionRequest-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "head": {
        "summary": "Head Deletion Requests",
        "description": "Return deletion requests path headers",
        "operationId": "head_deletion_requests_flow_delete_requests_head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/flow-delete-requests/{request_id}": {
      "head": {
        "summary": "Head Deletion Request",
        "description": "Return deletion request path headers",
        "operationId": "head_deletion_request_flow_delete_requests__request_id__head",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Deletion Request",
        "description": "Get deletion request by ID",
        "operationId": "get_deletion_request_flow_delete_requests__request_id__get",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletionRequest-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Get Metrics",
        "description": "Prometheus metrics endpoint",
        "operationId": "get_metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AudioFlow-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-nmos:format:audio"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "sample_rate": {
            "type": "integer",
            "title": "Sample Rate"
          },
          "bits_per_sample": {
            "type": "integer",
            "title": "Bits Per Sample"
          },
          "channels": {
            "type": "integer",
            "title": "Channels"
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "max_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bit Rate"
          },
          "avg_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Bit Rate"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec",
          "sample_rate",
          "bits_per_sample",
          "channels"
        ],
        "title": "AudioFlow",
        "description": "Audio flow model"
      },
      "AudioFlow-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-nmos:format:audio"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "sample_rate": {
            "type": "integer",
            "title": "Sample Rate"
          },
          "bits_per_sample": {
            "type": "integer",
            "title": "Bits Per Sample"
          },
          "channels": {
            "type": "integer",
            "title": "Channels"
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "max_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bit Rate"
          },
          "avg_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Bit Rate"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec",
          "sample_rate",
          "bits_per_sample",
          "channels"
        ],
        "title": "AudioFlow",
        "description": "Audio flow model"
      },
      "Body_create_new_flow_segment_flows__flow_id__segments_post": {
        "properties": {
          "segment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FlowSegment"
              },
              {
                "type": "null"
              }
            ]
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File"
          },
          "segment_data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment Data"
          }
        },
        "type": "object",
        "title": "Body_create_new_flow_segment_flows__flow_id__segments_post"
      },
      "CollectionItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CollectionItem",
        "description": "Collection item for source collections"
      },
      "DataFlow-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-nmos:format:data"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec"
        ],
        "title": "DataFlow",
        "description": "Data flow model"
      },
      "DataFlow-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-nmos:format:data"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec"
        ],
        "title": "DataFlow",
        "description": "Data flow model"
      },
      "DeletionRequest-Input": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "flow_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Flow Id"
          },
          "timerange": {
            "type": "string",
            "title": "Timerange"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "flow_id",
          "timerange",
          "status",
          "created"
        ],
        "title": "DeletionRequest",
        "description": "Flow deletion request"
      },
      "DeletionRequest-Output": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "flow_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Flow Id"
          },
          "timerange": {
            "type": "string",
            "title": "Timerange"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "flow_id",
          "timerange",
          "status",
          "created"
        ],
        "title": "DeletionRequest",
        "description": "Flow deletion request"
      },
      "DeletionRequestsList": {
        "properties": {
          "requests": {
            "items": {
              "$ref": "#/components/schemas/DeletionRequest-Output"
            },
            "type": "array",
            "title": "Requests"
          }
        },
        "type": "object",
        "required": [
          "requests"
        ],
        "title": "DeletionRequestsList",
        "description": "List of deletion requests"
      },
      "DeletionRequestsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeletionRequestsList"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DeletionRequestsResponse",
        "description": "Deletion requests list response"
      },
      "EventStreamMechanism": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "EventStreamMechanism",
        "description": "Event stream mechanism"
      },
      "FlowSegment": {
        "properties": {
          "object_id": {
            "type": "string",
            "title": "Object Id"
          },
          "timerange": {
            "type": "string",
            "title": "Timerange"
          },
          "ts_offset": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ts Offset"
          },
          "last_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Duration"
          },
          "sample_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Offset"
          },
          "sample_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Count"
          },
          "get_urls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GetUrl"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Get Urls"
          },
          "key_frame_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key Frame Count"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "object_id",
          "timerange"
        ],
        "title": "FlowSegment",
        "description": "Flow segment model"
      },
      "FlowStorage": {
        "properties": {
          "storage_locations": {
            "items": {
              "$ref": "#/components/schemas/StorageLocation"
            },
            "type": "array",
            "title": "Storage Locations"
          }
        },
        "type": "object",
        "required": [
          "storage_locations"
        ],
        "title": "FlowStorage",
        "description": "Flow storage response"
      },
      "FlowStoragePost": {
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit"
          },
          "object_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Object Ids"
          }
        },
        "type": "object",
        "title": "FlowStoragePost",
        "description": "Flow storage allocation request"
      },
      "FlowsResponse": {
        "properties": {
          "data": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/VideoFlow-Output"
                },
                {
                  "$ref": "#/components/schemas/AudioFlow-Output"
                },
                {
                  "$ref": "#/components/schemas/DataFlow-Output"
                },
                {
                  "$ref": "#/components/schemas/ImageFlow-Output"
                },
                {
                  "$ref": "#/components/schemas/MultiFlow-Output"
                }
              ]
            },
            "type": "array",
            "title": "Data"
          },
          "paging": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "FlowsResponse",
        "description": "Flows list response"
      },
      "GetUrl": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "GetUrl",
        "description": "Get URL for flow segments"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageFlow-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-tam:format:image"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "frame_width": {
            "type": "integer",
            "title": "Frame Width"
          },
          "frame_height": {
            "type": "integer",
            "title": "Frame Height"
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "max_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bit Rate"
          },
          "avg_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Bit Rate"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec",
          "frame_width",
          "frame_height"
        ],
        "title": "ImageFlow",
        "description": "Image flow model"
      },
      "ImageFlow-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-tam:format:image"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "frame_width": {
            "type": "integer",
            "title": "Frame Width"
          },
          "frame_height": {
            "type": "integer",
            "title": "Frame Height"
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "max_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bit Rate"
          },
          "avg_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Bit Rate"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec",
          "frame_width",
          "frame_height"
        ],
        "title": "ImageFlow",
        "description": "Image flow model"
      },
      "MediaStore": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "http_object_store"
          }
        },
        "type": "object",
        "title": "MediaStore",
        "description": "Media store configuration"
      },
      "MultiFlow-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-nmos:format:multi"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "flow_collection": {
            "items": {
              "type": "string",
              "format": "uuid4"
            },
            "type": "array",
            "title": "Flow Collection"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec",
          "flow_collection"
        ],
        "title": "MultiFlow",
        "description": "Multi flow model"
      },
      "MultiFlow-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-nmos:format:multi"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "flow_collection": {
            "items": {
              "type": "string",
              "format": "uuid4"
            },
            "type": "array",
            "title": "Flow Collection"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec",
          "flow_collection"
        ],
        "title": "MultiFlow",
        "description": "Multi flow model"
      },
      "Object-Input": {
        "properties": {
          "object_id": {
            "type": "string",
            "title": "Object Id"
          },
          "flow_references": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Flow References"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "object_id",
          "flow_references"
        ],
        "title": "Object",
        "description": "Media object information"
      },
      "Object-Output": {
        "properties": {
          "object_id": {
            "type": "string",
            "title": "Object Id"
          },
          "flow_references": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Flow References"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "object_id",
          "flow_references"
        ],
        "title": "Object",
        "description": "Media object information"
      },
      "PagingInfo": {
        "properties": {
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit"
          },
          "next_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Key"
          }
        },
        "type": "object",
        "title": "PagingInfo",
        "description": "Paging information"
      },
      "Service": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "urn:x-tams:service:api"
          },
          "api_version": {
            "type": "string",
            "title": "Api Version",
            "default": "6.0"
          },
          "service_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Version"
          },
          "media_store": {
            "$ref": "#/components/schemas/MediaStore"
          },
          "event_stream_mechanisms": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EventStreamMechanism"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Stream Mechanisms"
          }
        },
        "type": "object",
        "required": [
          "media_store"
        ],
        "title": "Service",
        "description": "Service information model"
      },
      "Source-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "format": {
            "type": "string",
            "title": "Format"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "source_collection": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CollectionItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Collection"
          },
          "collected_by": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collected By"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "format"
        ],
        "title": "Source",
        "description": "Source model as defined in TAMS API"
      },
      "Source-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "format": {
            "type": "string",
            "title": "Format"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "source_collection": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CollectionItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Collection"
          },
          "collected_by": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collected By"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "format"
        ],
        "title": "Source",
        "description": "Source model as defined in TAMS API"
      },
      "SourcesResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Source-Output"
            },
            "type": "array",
            "title": "Data"
          },
          "paging": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "SourcesResponse",
        "description": "Sources list response"
      },
      "StorageLocation": {
        "properties": {
          "object_id": {
            "type": "string",
            "title": "Object Id"
          },
          "put_url": {
            "type": "string",
            "title": "Put Url"
          },
          "bucket_put_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Put Url"
          }
        },
        "type": "object",
        "required": [
          "object_id",
          "put_url"
        ],
        "title": "StorageLocation",
        "description": "Storage location for media objects"
      },
      "Tags": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object",
        "title": "Tags",
        "description": "Tags model - flexible key-value pairs using Pydantic v2 RootModel"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VideoFlow-Input": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-nmos:format:video"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "frame_width": {
            "type": "integer",
            "title": "Frame Width"
          },
          "frame_height": {
            "type": "integer",
            "title": "Frame Height"
          },
          "frame_rate": {
            "type": "string",
            "title": "Frame Rate"
          },
          "interlace_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interlace Mode"
          },
          "color_sampling": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Sampling"
          },
          "color_space": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Space"
          },
          "transfer_characteristics": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Characteristics"
          },
          "color_primaries": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Primaries"
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "max_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bit Rate"
          },
          "avg_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Bit Rate"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec",
          "frame_width",
          "frame_height",
          "frame_rate"
        ],
        "title": "VideoFlow",
        "description": "Video flow model"
      },
      "VideoFlow-Output": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "source_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Source Id"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "default": "urn:x-nmos:format:video"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "tags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tags"
              },
              {
                "type": "null"
              }
            ]
          },
          "frame_width": {
            "type": "integer",
            "title": "Frame Width"
          },
          "frame_height": {
            "type": "integer",
            "title": "Frame Height"
          },
          "frame_rate": {
            "type": "string",
            "title": "Frame Rate"
          },
          "interlace_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interlace Mode"
          },
          "color_sampling": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Sampling"
          },
          "color_space": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Space"
          },
          "transfer_characteristics": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Characteristics"
          },
          "color_primaries": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Primaries"
          },
          "container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container"
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "default": false
          },
          "max_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Bit Rate"
          },
          "avg_bit_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Bit Rate"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "default": false
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "codec",
          "frame_width",
          "frame_height",
          "frame_rate"
        ],
        "title": "VideoFlow",
        "description": "Video flow model"
      },
      "Webhook": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "api_key_name": {
            "type": "string",
            "title": "Api Key Name"
          },
          "api_key_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key Value"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          }
        },
        "type": "object",
        "required": [
          "url",
          "api_key_name",
          "events"
        ],
        "title": "Webhook",
        "description": "Webhook configuration"
      },
      "WebhookPost": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "api_key_name": {
            "type": "string",
            "title": "Api Key Name"
          },
          "api_key_value": {
            "type": "string",
            "title": "Api Key Value"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "url",
          "api_key_name",
          "api_key_value",
          "events"
        ],
        "title": "WebhookPost",
        "description": "Webhook registration request"
      },
      "WebhooksResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Webhook"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "WebhooksResponse",
        "description": "Webhooks list response"
      }
    }
  }
}